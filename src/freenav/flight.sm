%class Flight

%start FlightFSM::Initialising
%map FlightFSM
%%
// Waiting for first GPS fix
Initialising
{
    // Restart in air after task start
    new_position [(ctxt.ground_speed > 10) and ctxt.is_previous_start()]
        OnTask
        {
        }

    // Restart after launch, but before start
    new_position [ctxt.ground_speed > 10]
        WaitingForStart
        {
        }

    // Start on grid
    new_position [ctxt.ground_speed < 2]
        OnGround
        {
            init_ground();
        }
}

// On the ground, waiting for takeoff
OnGround
Exit {do_takeoff();}
{
    new_position [ctxt.ground_speed > 10]
        WaitingForStart
        {
        }

    new_pressure_level (level)
        nil
        {
            do_update_pressure_level(level);
        }
}

// Launched, but not ready for start yet
WaitingForStart
Entry {set_task("Launch");}
{
    start_trigger
        OutsideStartSector
        {
        }
}

// Ready for start - outsite start sector
OutsideStartSector
Entry {set_task("start"); reset_tp_list();}
{
    new_position [ctxt.in_start_sector()]
        InsideStartSector
        {
        }

    start_trigger
        OnTask
        {
            set_task("task");
            make_start();
        }
}

// Ready for start - inside start sector
InsideStartSector
Entry {set_task("sector");}
{
    new_position [not ctxt.in_start_sector()]
        OnTask
        {
            set_task("task");
            make_start();
        }

    start_trigger
        OnTask
        {
            set_task("task");
            make_start();
        }
}

// On task
OnTask
{
    // Suspend task and go somewhere else
    divert(waypoint_id)
        Diverted
        {
            set_task("divert");
            do_divert(waypoint_id);
        }

    next_turnpoint
        nil
        {
            do_next_turnpoint();
        }

    start_trigger
        OutsideStartSector
        {
        }
}

// Diverting to (non-task) waypoint
Diverted
{
    // Finished faffing... back to task
    cancel_divert
        OnTask
        {
            set_task("task");
            do_cancel_divert();
        }
}

// Default stuff
Default
{
    Default
        nil
        {
        }
}
%%
