%class Flight

%start FlightFSM::Init
%map FlightFSM
%%
//---------------------------------------------------------------------------
// Waiting for first GPS fix

Init
    Entry {do_init();}
{
    // Restart in air after task start
    new_position [(ctxt.ground_speed > ctxt.TAKEOFF_SPEED)]
        Air
        {
            do_update_position();
        }

    // Start on grid
    new_position [ctxt.ground_speed < ctxt.STOPPED_SPEED]
        Ground
        {
            do_update_position();
        }
}

//---------------------------------------------------------------------------
// On the ground, waiting for takeoff

Ground
    Entry {do_init_ground();}
    Exit {do_takeoff();}
{
    // Takeoff
    new_position [ctxt.ground_speed > ctxt.TAKEOFF_SPEED]
        Launch
        {
            do_update_position();
        }

    // Update pressure reference
    new_pressure_level(level)
        nil
        {
            do_ground_pressure_level(level);
        }
}

//---------------------------------------------------------------------------
// Program (re-)initialisation in air

Air
    Entry {do_init_air();}
{
    new_position [not ctxt.is_previous_start()]
        Launch
        {
            do_update_position();
        }

    new_position [ctxt.is_previous_start()]
        Resume
        {
            do_update_position();
        }
}

//---------------------------------------------------------------------------
// Launched, but not ready for start yet

Launch
    Entry {do_launch();}
{
    start_trigger
        Start
        {
        }
}

//---------------------------------------------------------------------------
// Ready for start - outsite start sector

Start
    Entry {do_start();}
{
    new_position [ctxt.in_start_sector()]
        Sector
        {
            do_update_position();
        }

    start_trigger
        Line
        {
        }
}

//---------------------------------------------------------------------------
// Ready for start - inside start sector

Sector
    Entry {do_start_sector();}
{
    new_position [not ctxt.in_start_sector()]
        Line
        {
            do_update_position();
        }

    start_trigger
        Line
        {
        }
}

//---------------------------------------------------------------------------
// Start line

Line
    Entry {do_line();}
{
    new_position
        Task
        {
            do_update_position();
        }
}

//---------------------------------------------------------------------------
// Resume from previous start

Resume
    Entry {do_resume();}
{
    new_position
        Task
        {
            do_update_position();
        }
}

//---------------------------------------------------------------------------
// On task

Task
    Entry {do_task();}
{
    // Suspend task and go somewhere else
    divert(waypoint_id)
        Divert
        {
            do_set_divert(waypoint_id);
        }

    next_turnpoint
        Task
        {
            do_next_turnpoint();
        }

    prev_turnpoint
        Task
        {
            do_prev_turnpoint();
        }

    start_trigger
        Start
        {
        }

    new_position
        nil
        {
            do_update_task_position();
        }
}

//---------------------------------------------------------------------------
// Diverting to (non-task) waypoint

Divert
    Entry {do_divert();}
{
    cancel_divert
        Task
        {
            do_cancel_divert();
        }

    divert(waypoint_id)
        Divert
        {
            do_set_divert(waypoint_id);
        }
}

//---------------------------------------------------------------------------
// Default stuff

Default
{
    Default
        nil
        {
        }

    new_position
        nil
        {
            do_update_position(True);
        }
}
%%
