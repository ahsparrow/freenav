#!/usr/bin/env python

import ConfigParser
import os

import dbus, dbus.mainloop.glib
import gtk
import gobject

import freenav.freedb

try:
    import hildon
    IS_HILDON_APP = True
    APP_BASE = hildon.Program
except ImportError:
    IS_HILDON_APP = False
    APP_BASE = object

OSSO_APPLICATION = "uk.org.freeflight.freenav"

DBUS_SERVICE = "org.freedesktop.Gypsy"
DBUS_PATH = "/org/freedesktop/Gypsy"

CONTROL_INTERFACE = "org.freedesktop.Gypsy.Server"
DEVICE_INTERFACE = "org.freedesktop.Gypsy.Device"
POSITION_INTERFACE = "org.freedesktop.Gypsy.Position"

latlon_markup = '<span size="32000" weight="bold">%s</span>'

def deg_to_dmm(val):
    dec = int(round(val * 60 * 1000))
    min = dec / 1000
    dec = dec % 1000
    deg = min / 60
    min = min % 60
    return (deg, min, dec)

def fmt_lat(lat):
    if lat < 0:
        hemi = "S"
        lat = -lat
    else:
        hemi = "N"

    (deg, min, dec) = deg_to_dmm(lat)
    return u"%s %02d\u00B0 %02d.%03d'" % (hemi, deg, min, dec)

def fmt_lon(lon):
    if lon < 0:
        hemi = "W"
        lon = -lon
    else:
        hemi = "E"

    (deg, min, dec) = deg_to_dmm(lon)
    return u"%s %03d\u00B0 %02d.%03d'" % (hemi, deg, min, dec)

class App(APP_BASE):
    def __init__(self, config):
        APP_BASE.__init__(self)

        db = freenav.freedb.Freedb()

        # Set-up all the D-Bus stuff
        dbus.mainloop.glib.DBusGMainLoop(set_as_default=True)

        bus = dbus.SystemBus()
        control = bus.get_object(DBUS_SERVICE, DBUS_PATH)

        # GPS device
        gps_dev_path = config.get('Devices', db.get_settings()['gps_device'])
        path = control.Create(gps_dev_path, dbus_interface=CONTROL_INTERFACE)
        gps = bus.get_object(DBUS_SERVICE, path)

        # Various interfaces
        self.gps_dev_if = dbus.Interface(gps, dbus_interface=DEVICE_INTERFACE)
        posn_if = dbus.Interface(gps, dbus_interface=POSITION_INTERFACE)

        # Signal handlers for position and pressure level changes
        posn_if.connect_to_signal("PositionChanged", self.position_changed)

        # Start the GPS
        self.gps_dev_if.Start()

        # Top level window
        if IS_HILDON_APP:
            self.window = hildon.Window()
        else:
            self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)
        self.window.set_border_width(3)
        self.window.connect('destroy', gtk.main_quit)

        vbox = gtk.VBox(False)
        self.window.add(vbox)

        self.lat_label = gtk.Label('')
        self.lon_label = gtk.Label('')
        vbox.pack_start(self.lat_label, False, False, 30)
        vbox.pack_start(self.lon_label, False, False, 20)

        self.window.show_all()

    def position_changed(self, _field_set,
                         timestamp, latitude, longitude, altitude):
        """D-Bus callback"""
        self.lat_label.set_markup(latlon_markup % fmt_lat(latitude))
        self.lon_label.set_markup(latlon_markup % fmt_lon(longitude))

        self.window.queue_draw()
        return True

    def main(self):
        gtk.main()

def main():
    config = ConfigParser.ConfigParser()
    config.read(os.path.join(os.path.expanduser('~'), '.freeflight',
                             'freenav.ini'))

    app = App(config)
    app.main()

if __name__ == '__main__':
    main()
